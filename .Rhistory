library(readr)
ml2_test <- read_csv("Desktop/iitb/ml2_test.numbers")
View(ml2_test)
library(readr)
ml2_test <- read_csv("Desktop/ml2_test.csv")
View(ml2_test)
library(readr)
ml2_train <- read_csv("Desktop/iitb/ml2_train.csv")
View(ml2_train)
print("WELCOME")
data1 <-read.csv(head=TRUE,sep=",",file="~/desktop/iitb/ml2_train.csv")
view(data1)
print("WELCOME")
data1 <-read.csv(head=TRUE,sep=",",file="~/desktop/iitb/ml2_train.csv")
data1 <-read.csv(head=TRUE,sep=",",file="~/desktop/iitb/ml2_test.csv")
library(caTools)
split<-sample.split(data,SplitRatio = 0.8)
split
training_data<-subset(data1,split=="TRUE")
training_data
print("Hi")
testing_data<-subset(data2,split=="TRUE")
testing_data
logit_model<-glm(type~.,training_data,family=binomial)
summary(logit_model)
res<-predict(logit_model,testing_data,type = "response")
res
table(Actual_value=testing_data$type,predicted_value=res>0.3)
library(ROCR)
#Prediction
ROCRPred<-prediction(res,testing_data$type)
view(ROCRPred)
print("WELCOME")
data1 <-read.csv(head=TRUE,sep=",",file="~/desktop/iitb/ml2_train.csv")
data1 <-read.csv(head=TRUE,sep=",",file="~/desktop/iitb/ml2_test.csv")
library(caTools)
split<-sample.split(data,SplitRatio = 0.8)
split
training_data<-subset(data1,split=="TRUE")
training_data
print("Hi")
testing_data<-subset(data2,split=="TRUE")
testing_data
logit_model<-glm(type~.,training_data,family=binomial)
summary(logit_model)
res<-predict(logit_model,testing_data,type = "response")
res
table(Actual_value=testing_data$type,predicted_value=res>0.3)
library(ROCR)
#Prediction
ROCRPred<-prediction(res,testing_data$type)
print("WELCOME")
data1 <-read.csv(head=TRUE,sep=",",file="~/desktop/iitb/ml2_train.csv")
data2 <-read.csv(head=TRUE,sep=",",file="~/desktop/iitb/ml2_test.csv")
library(caTools)
split<-sample.split(data,SplitRatio = 0.8)
split
training_data<-subset(data1,split=="TRUE")
training_data
print("Hi")
testing_data<-subset(data2,split=="TRUE")
testing_data
logit_model<-glm(type~.,training_data,family=binomial)
summary(logit_model)
res<-predict(logit_model,testing_data,type = "response")
res
table(Actual_value=testing_data$type,predicted_value=res>0.3)
library(ROCR)
#Prediction
ROCRPred<-prediction(res,testing_data$type)
print("WELCOME")
data1 <-read.csv(head=TRUE,sep=",",file="~/desktop/iitb/ml2_train.csv")
data2 <-read.csv(head=TRUE,sep=",",file="~/desktop/iitb/ml2_test.csv")
library(caTools)
split<-sample.split(data,SplitRatio = 0.8)
split
training_data<-subset(data1,split=="TRUE")
training_data
print("Hi")
testing_data<-subset(data2,split=="FALSE")
testing_data
logit_model<-glm(type~.,training_data,family=binomial)
summary(logit_model)
res<-predict(logit_model,testing_data,type = "response")
res
table(Actual_value=testing_data$type,predicted_value=res>0.3)
library(ROCR)
#Prediction
ROCRPred<-prediction(res,testing_data$type)
View(ml2_train)
print("WELCOME")
data <-read.csv(head=TRUE,sep=",",file="~/desktop/datasetml/Diabetes.csv")
view(data)
library(caTools)
split<-sample.split(data,SplitRatio = 0.8)
split
training_data<-subset(data,split=="TRUE")
training_data
print("Hi")
testing_data<-subset(data,split=="FALSE")
testing_data
logit_model<-glm(type~.,training_data,family=binomial)
summary(logit_model)
res<-predict(logit_model,testing_data,type = "response")
res
table(Actual_value=testing_data$type,predicted_value=res>0.3)
library(ROCR)
#Prediction
ROCRPred<-prediction(res,testing_data$type)
#Performance
#tpr:true prediction fpr:false prediction
ROCRPref<-performance(ROCRPred,"tpr","fpr")
# you can give any color here example color="black"
plot(ROCRPref,colorize=TRUE,print.cutoffs.at=seq(0.1))
print("WELCOME")
data <-read.csv(head=TRUE,sep=",",file="~/desktop/datasetml/Diabetes.csv")
view(data)
library(caTools)
split<-sample.split(data,SplitRatio = 0.8)
split
training_data<-subset(data,split=="TRUE")
training_data
print("Hi")
testing_data<-subset(data,split=="FALSE")
testing_data
logit_model<-glm(type~.,training_data,family=binomial)
summary(logit_model)
res<-predict(logit_model,testing_data,type = "response")
res
table(Actual_value=testing_data$type,predicted_value=res>0.3)
library(ROCR)
#Prediction
ROCRPred<-prediction(res,testing_data$type)
#Performance
#tpr:true prediction fpr:false prediction
